org: jstimpson

service: jstimpson-server

app: jstimpson-server


provider:
  name: aws
  region: us-east-1
  runtime: python3.12
  stage: ${opt:stage, 'local'}
  stackName: jstimpson-server-${self:provider.stage}
  environment:
    ENV: ${self:provider.stage}
    STRAVA_CLIENT_ID: ${ssm:/jstimpson-server/STRAVA_CLIENT_ID}
    STRAVA_CLIENT_SECRET: ${ssm:/jstimpson-server/STRAVA_CLIENT_SECRET}
    DB_NAME: ${ssm:/jstimpson-server/${self:provider.stage}/DB_NAME}
    DB_URI: ${ssm:/jstimpson-server/DB_URI}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ssm:GetParameters"
      Resource:
        - "arn:aws:ssm:us-east-1:343647980472:parameter/jstimpson-server/*"

plugins:
  - serverless-offline
  - serverless-python-requirements

functions:
  db-updater:
    name: jstimpson-server-db-updater-${self:provider.stage}
    handler: app.handlers.db_updater.handler
    memorySize: 1024
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
    events:
      - schedule:
          rate: cron(0 0 * * ? *)
  api:
    name: jstimpson-server-api-${self:provider.stage}
    handler: app.handlers.api.handler
    memorySize: 1024
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
    events:
      - httpApi:
          path: /runs
          method: get
      - httpApi:
          path: /activities
          method: get
      - httpApi:
          path: /health
          method: get

custom:
  pythonRequirements:
    dockerizePip: non-linux
    layer: true
    zip: true
  serverless-offline:
    port: 3006
    httpPort: 9091
    lambdaPort: 3002

package:
  include:
    - app/**
